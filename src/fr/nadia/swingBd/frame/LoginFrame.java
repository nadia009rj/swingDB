/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package fr.nadia.swingBd.frame;

import fr.nadia.database.utils.DatabaseConnection;
import fr.nadia.database.utils.DatabaseTools;
import fr.nadia.swingBd.entity.User;
import java.awt.Color;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import swingdb.AppContext;

/**
 *
 * @author Administrateur
 */
public class LoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        loginField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField1 = new javax.swing.JTextField();
        valideButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        erreurLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setText("identifiant");

        loginField1.setText("nadia@free.fr");
        loginField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Mot de passe");
        jLabel2.setToolTipText("");

        passwordField1.setText("123");

        valideButton.setBackground(new java.awt.Color(255, 204, 204));
        valideButton.setText("Connexion");
        valideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valideButtonActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 204, 204));
        jLabel3.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel3.setText("LOGIN");

        erreurLabel.setForeground(new java.awt.Color(204, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(passwordField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                                    .addComponent(loginField1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(valideButton))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(erreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(valideButton)
                .addGap(18, 18, 18)
                .addComponent(erreurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginField1ActionPerformed
     
    }//GEN-LAST:event_loginField1ActionPerformed

    private void valideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valideButtonActionPerformed
        //1 recuperation de  saisie
        String login = loginField1.getText();
        String password = passwordField1.getText();
        
        //2validation de la saisie
        //booleen indiquant si la saisie est valide
        boolean validData = true;
        
        // validation du login ( qui est un email)
        if(login.equals("") || login.length()< 3 || login.indexOf("@") < 1){
            loginField1.setBackground(Color.red);
            validData = false;
        }else{
            loginField1.setBackground(Color.white);
        }
        
        //validation du password(mot de passe)
        
        if(password.equals("") || password.length() <3 ){
            passwordField1.setBackground(Color.red);
            validData = false;
        
    }else{
            passwordField1.setBackground(Color.white);
        }
        //si la saisi est valide
        if(validData){
            try {
                //recuperation de connexion
                Connection cn = DatabaseConnection.getIntance();
                String sql = "SELECT * FROM utilisateurs WHERE email =? AND mot_de_passe=?";
                //preparation de la requÃªte
                PreparedStatement pstm = cn.prepareStatement(sql);
                //passage des parametres
                pstm.setString(1, login);
                pstm.setString(2, DatabaseTools.sha1Encode(password));
                //execution de la requete executeQuery (select) executeUpdate(delete, update insert,)
                ResultSet rs = pstm.executeQuery();
              
                //si rs.next() retourne false alors le resultSet est vide
                if(rs.next()){
                    //instanciation de l utilisateur
                    //importer user qui est dans la classe user
                    //on clique sur l empoule( add)
                    User user = new User();
                    //c est une chainage on met une seule fois user
                    //hydradation de l objet User (
                    user.setId(rs.getInt("id"))
                            .setName(rs.getString("nom"))
                            .setFirstName(rs.getString("prenom"))
                            .setEmail(rs.getString("email"))
                            .setRole(rs.getString("role"));
                    //stockage de l utilisateur dans un objet contexte(global)
                    //pour le rendre disponible partout dans l application
                    AppContext.setCurrentUser(user);
                    
                    // ouvrir la fenetre MainFrame
                    MainFrame app = new MainFrame();
                    app.setVisible(true);
                    app.setLocationRelativeTo(null);
                            
                    //fermeture de LoginFrame
                    this.dispose();
                            
                    
                }else{
                   
                   erreurLabel.setText("Vos informations de connexion sont incorrectes");
                }
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_valideButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel erreurLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField loginField1;
    private javax.swing.JTextField passwordField1;
    private javax.swing.JButton valideButton;
    // End of variables declaration//GEN-END:variables
}
